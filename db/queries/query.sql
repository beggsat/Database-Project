-- Query 1: List all restaurants making below the average gross revenue within the same zip code.
SELECT restaurantName AS 'Restaurant', grossRevenue 'Gross Revenue'
FROM restaurant r JOIN building b on r.restaurantID = b.RestaurantID
WHERE grossRevenue < (SELECT AVG(grossRevenue)
                      FROM restaurant r JOIN building b on r.restaurantID = b.RestaurantID
                      WHERE Zipcode = 31120);

-- Query 2: Get the average gross revenue of restaurants in a specific zip code.
SELECT ROUND(avg(grossRevenue), 2) as 'Average Gross Revenue'
FROM restaurant NATURAL JOIN building
WHERE Zipcode = 31120;

-- Query 3: Get a list of restaurants of a certain type in a specific zip code.
SELECT restaurantName AS 'Restaurant Name', Zipcode AS 'ZIP'
FROM restaurant JOIN building b ON restaurant.restaurantID = b.RestaurantID
WHERE Zipcode = 23112 AND restaurantType LIKE 'American';

-- Query 4: Get a list of dishes sold during a specific time frame.
SELECT dishName AS 'Dish', timeServed AS 'Date/Time'
FROM sale
WHERE timeServed >= '2019:6:1 12:00:00' AND timeServed <= '2019:6:1 14:00:00';

-- Query 5: Get a list of buildings that are do not have restaurants in them.
SELECT BuildingAddress AS 'Address', Zipcode AS 'ZIP', SquareFootage AS 'Square Footage', Capacity AS 'Capacity', ROUND(YearlyCost,2) AS 'Yearly Cost'
FROM building
WHERE RestaurantID IS NULL;

-- Query 6: Get the average rent of all buildings sharing a specific zip code.
SELECT ROUND(AVG(rent), 2) AS 'Average Rent'
FROM building
WHERE Zipcode = 31120;

-- Query 7: Get the profit generated by each server at a restaurant.
SELECT employeeName AS 'Employee', ROUND(SUM(price - cost), 2) AS 'Profit Generated'
FROM server NATURAL JOIN sale JOIN dish d on sale.dishName = d.dishName
WHERE server.ssn = sale.empId
GROUP BY employeeName;

-- Query 8: Get a list of servers with average tips below the total average tips of all servers.
SELECT employeeName AS 'Employee', avgTips AS 'Average Tips'
FROM server
WHERE avgTips < (SELECT AVG(avgTips) FROM server)
GROUP BY employeeName, avgTips;

-- Query 9: Get a list of the highest profit generating dishes on the lunch menu.
SELECT d.dishName, ROUND(SUM(price - cost), 2) AS profit
FROM sale s JOIN dish d ON s.dishName = d.dishName JOIN menu m ON d.menuID = m.id
GROUP BY d.dishName
HAVING profit = (SELECT MAX(profit)
                FROM(SELECT d.dishName AS dishName, SUM(price - cost) AS profit
                    FROM sale s JOIN dish d ON s.dishName = d.dishName JOIN menu m ON d.menuID = m.id
                    GROUP BY d.dishName) AS pTable
                ORDER BY dishName);

-- Query 10: Get a list of servers at a location who are not scheduled for a specific time frame.
SELECT employeeName, ScheduleDate, StartShift, EndShift
FROM server JOIN schedule
WHERE ScheduleDate != '2019-06-12'
AND StartShift NOT BETWEEN '09:30:00' AND '15:45:00'
AND EndShift NOT BETWEEN '09:30:00' AND '15:45:00'
ORDER BY employeeName;

-- Query 11: Get the operating cost of a restaurant’s specific location.
SELECT restaurantName AS 'Restaurant', BuildingAddress AS 'Address', ROUND(operatingCost, 2) AS 'Operating Cost'
FROM restaurant r JOIN building b ON r.restaurantID = b.RestaurantID
WHERE b.Zipcode = '31120';

-- Query 12: Get a list of restaurants with the same type in the same area.
Select restaurantName
from restaurant natural join building as r1
WHERE zipcode = 23112 AND restaurantType like 'American';

Select restaurantName
from restaurant natural join building as r1
WHERE zipcode = 23220 AND restaurantType like 'Italian';

-- Query 13: Get a list of employees who work at a restaurant location.
SELECT employeeName
from employee
WHERE restaurantID = 1001;

-- Query 14: Get a list of sales for the entire day at a restaurant location.
SELECT tip, timeServed, empId, dishName, restaurantID
from sale
where timeServed >= "2019-06-01"
AND timeServed < "2019-06-02"
AND restaurantID = 1002;

-- Query 15: Get a list of restaurants owned by a specific manager.
SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Bob Pascoot';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Kellsie Vany';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Giselbert Dun';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Kiley Hixson';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Odo Pascall';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Lou Durak';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Allen Yams';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Pop Jacobs';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Will Marks';

SELECT restaurantName AS 'Restaurant', employeeName AS 'Manager'
FROM restaurant r JOIN manager m
ON r.managerID = m.ssn
WHERE m.employeeName = 'Mark Wills';

-- Query 16: Get a list of profits for dishes created in the last month.
SELECT timeServed AS 'Date/Time', dishName AS 'Dish', dateCreated AS 'Date Dish Created'
FROM dish NATURAL JOIN sale
WHERE DATE(dateCreated) >= DATE(NOW() - INTERVAL 1 MONTH);

-- Query 17: Get the average rent of buildings in a zip code.
select ROUND(avg(Rent), 2) as 'Average Rent'
from building
where Zipcode = 23220;

-- Query 18: Get a list of entrees on the dinner menu of a restaurant.
SELECT dish.dishName AS 'Dish'
FROM dish NATURAL JOIN menu
WHERE menuType = 'Dinner' AND dishType='Entree';

-- Query 19: Get an employee’s schedule for an entire week.
Select ScheduleDate, StartShift, EndShift, restaurantID
from schedule natural join employee as r1
where employeeName like "Allen Yams"
AND ScheduleDate >= "2019-03-15"
AND ScheduleDate < "2019-03-23";

-- Query 20: Get the capacity for a restaurant’s building.
select Capacity
from building natural join restaurant as r1
where restaurantName like "Mellow Mushroom";

